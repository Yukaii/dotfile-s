#!/bin/bash

# Function to generate a dynamic cache file name based on the scanning directory
generate_cache_file() {
    local scan_dir="$1"
    local cache_file="/tmp/ncdu_$(echo "$scan_dir" | tr '/' '_').cache"
    echo "$cache_file"
}

# Function to display help information
display_help() {
    echo "Usage: $0 [OPTIONS] [DIRECTORY]"
    echo
    echo "Perform an ncdu scan on the specified directory and generate a cache file."
    echo "If no directory is provided, the current directory will be scanned."
    echo
    echo "Options:"
    echo "  --view           View the existing cache file instead of performing a new scan."
    echo "  --exclude <path> Exclude the specified path from the scan. Can be used multiple times."
    echo "  --help           Display this help information."
    echo
    echo "Examples:"
    echo "  $0                              # Scan the current directory"
    echo "  $0 /path/to/directory           # Scan the specified directory"
    echo "  $0 --view                       # View the cache file for the current directory"
    echo "  $0 --exclude /path/to/exclude   # Exclude a specific path from the scan"
    echo
}

# Parse command line options
view_cache=false
scan_dir="$(pwd)"
exclude_options=()

while [[ $# -gt 0 ]]; do
    case "$1" in
        --view)
            view_cache=true
            shift
            ;;
        --exclude)
            if [[ $# -gt 1 ]]; then
                exclude_options+=("--exclude")
                exclude_options+=("$2")
                shift 2
            else
                echo "Error: --exclude option requires an argument"
                exit 1
            fi
            ;;
        --help)
            display_help
            exit 0
            ;;
        *)
            scan_dir="$1"
            shift
            ;;
    esac
done

# Generate the cache file name
cache_file="$(generate_cache_file "$scan_dir")"

if [[ "$view_cache" == true ]]; then
    # View the existing cache file
    if [[ -f "$cache_file" ]]; then
        cat "$cache_file" | ncdu -f- --enable-refresh
    else
        echo "Cache file not found: $cache_file"
    fi
else
    # Perform the scan and generate the cache file
    if [[ "$scan_dir" == "$HOME" ]]; then
        ncdu -o- --exclude "$HOME/Library/Mobile Documents/" --exclude "$HOME/Documents" "${exclude_options[@]}" "$scan_dir" | tee "$cache_file" | ncdu -f- --enable-refresh
    else
        ncdu -o- "${exclude_options[@]}" "$scan_dir" | tee "$cache_file" | ncdu -f- --enable-refresh
    fi
fi
