[include]
    path = ~/.gitconfig.local

[core]
	pager = git-split-diffs --color | less -RFX
	excludesfile = ~/.gitignore_global
	difftool = true
[delta]
    plus-style = "syntax #012800"
    minus-style = "syntax #340001"
    syntax-theme = Monokai Extended
[push]
	autoSetupRemote = true

[interactive]
    diffFilter = delta --color-only
[commit]
	gpgsign = true
[init]
	defaultBranch = main
; [diff]
; 	external = difft
;   tool = difftastic

[difftool]
  prompt = false

[difftool "difftastic"]
  cmd = difft "$LOCAL" "$REMOTE"
[alias]
    dft = difftool

    delete-squashed = "!f() { \
      local defaultBranch=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'); \
      local targetBranch=${1:-$defaultBranch}; \
      git checkout -q $targetBranch; \
      git branch --merged | \
        grep -v \"\\*\" | \
        grep -vE '^(develop|main|master|production|deploy)$' | \
        xargs -n 1 git branch -d; \
      git for-each-ref refs/heads/ \"--format=%(refname:short)\" | \
        while read branch; do \
          if [[ ! $branch =~ ^(develop|main|master|production|deploy)$ ]]; then \
            local mergeBase=$(git merge-base $targetBranch $branch); \
            if [[ $mergeBase != $(git rev-parse $branch) ]]; then \
              local isSquashed=$(git cherry $targetBranch $(git commit-tree $(git rev-parse $branch^{tree}) -p $mergeBase -m _)); \
              if [[ $isSquashed == \"-\"* ]]; then \
                git branch -D $branch; \
              fi; \
            fi; \
          fi; \
        done; \
    }; f"

  ff-branch = "!f() { git fetch ${2:-origin} $1:$1; }; f"

  pr-diff = "!f() { git diff $(git merge-base HEAD $1) HEAD; }; f"
  pr-diff-stat = "!f() { git diff --stat $(git merge-base HEAD $1) HEAD; }; f"
  pr-diff-files = "!f() { git diff --name-only $(git merge-base HEAD $1) HEAD; }; f"
[branch]
	sort = -committerdate
[column]
	ui = auto
[rerere]
	enabled = true
	autoUpdate = true
[split-diffs]
	theme-name = github-dark-dim
	min-line-width = 40
